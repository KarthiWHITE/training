<?xml version='1.0' encoding='utf-8'?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!-- Note:  A "Server" is not itself a "Container", so you may not
     define subcomponents such as "Valves" at this level.
     Documentation at /docs/config/server.html
 -->
<Server port="9005" shutdown="ShutDownControlServer">
  <Listener className="org.apache.catalina.startup.VersionLoggerListener" />
  <!-- Security listener. Documentation at /docs/config/listeners.html
  <Listener className="org.apache.catalina.security.SecurityListener" />
  -->
  <!--APR library loader. Documentation at /docs/apr.html -->
  <Listener className="org.apache.catalina.core.AprLifecycleListener" SSLEngine="on" />
  <!-- Prevent memory leaks due to use of particular java/javax APIs-->
  <Listener className="org.apache.catalina.core.JreMemoryLeakPreventionListener" />
  <Listener className="org.apache.catalina.mbeans.GlobalResourcesLifecycleListener" />
  <Listener className="org.apache.catalina.core.ThreadLocalLeakPreventionListener" />

  <!-- Global JNDI resources
       Documentation at /docs/jndi-resources-howto.html
  -->
  <GlobalNamingResources>
    <!-- Editable user database that can also be used by
         UserDatabaseRealm to authenticate users
    -->
    <Resource name="UserDatabase" auth="Container"
              type="org.apache.catalina.UserDatabase"
              description="User database that can be updated and saved"
              factory="org.apache.catalina.users.MemoryUserDatabaseFactory"
              pathname="conf/tomcat-users.xml" />
  </GlobalNamingResources>

  <!-- A "Service" is a collection of one or more "Connectors" that share
       a single "Container" Note:  A "Service" is not itself a "Container",
       so you may not define subcomponents such as "Valves" at this level.
       Documentation at /docs/config/service.html
   -->
  <Service name="Catalina">

    <!--The connectors can use a shared executor, you can define one or more named thread pools-->
    <!--
    <Executor name="tomcatThreadPool" namePrefix="catalina-exec-"
        maxThreads="150" minSpareThreads="4"/>
    -->


    <!-- A "Connector" represents an endpoint by which requests are received
         and responses are returned. Documentation at :
         Java HTTP Connector: /docs/config/http.html (blocking & non-blocking)
         Java AJP  Connector: /docs/config/ajp.html
         APR (HTTP/AJP) Connector: /docs/apr.html
		 Define a non-SSL/TLS HTTP/1.1 Connector on port 9090
	    -->
	    <Connector port="9090" protocol="HTTP/1.1"
		       connectionTimeout="20000"
		       redirectPort="443"
		       enableLookups="false"
		       maxThreads="10"
		       compression="on"
		       compressableMimeType="text/html,text/xml,text/plain,application/javascript,application/json,text/javascript"
		       server="ChargeBee ControlServer"
		       URIEncoding="UTF-8"/>    <!-- A "Connector" using the shared thread pool-->

	<!-- _PROD_UNCOMMENT_
	    <Connector port="9443"
		       protocol="HTTP/1.1"
		       SSLEnabled="true"
		       scheme="https"
		       secure="true"
		       proxyPort="443"
		       clientAuth="optional"
		       sslProtocol="TLSv1"
		       maxThreads="150"
		       enableLookups="false"

		       SSLCipherSuite="AESGCM:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-RC4-SHA:RC4-SHA:RC4:ECDHE-RSA-AES128-SHA256:AES256-SHA256:!MD5:!aNULL:!EDH"
		       SSLCertificateFile="${ssl.crt.path}/star_${ssl.crt.name}_com.crt"
		       SSLCertificateKeyFile="${ssl.crt.path}/star_${ssl.crt.name}_com.key"
		       SSLCACertificateFile="${ssl.crt.path}/intermediate_${ssl.crt.name}_com.crt"
		       SSLPassword="${ssl.crt.password}"

		       compression="on"
		       compressableMimeType="text/html,text/xml,text/plain,application/javascript,application/json,text/javascript"
		       server="ChargeBee"
		       URIEncoding="UTF-8"/>
	_PROD_UNCOMMENT_ -->


	    <!-- An Engine represents the entry point (within Catalina) that processes
		 every request.  The Engine implementation for Tomcat stand alone
		 analyzes the HTTP headers included with the request, and passes them
		 on to the appropriate Host (virtual host).
		 Documentation at /docs/config/engine.html -->

	    <!-- You should set jvmRoute to support load-balancing via AJP ie :
	    <Engine name="Catalina" defaultHost="localhost" jvmRoute="jvm1">
	    -->
	    <Engine name="Catalina" defaultHost="localhost">

	      <!--For clustering, please take a look at documentation at:
		  /docs/cluster-howto.html  (simple how to)
		  /docs/config/cluster.html (reference documentation) -->
	      <!--
      <Cluster className="org.apache.catalina.ha.tcp.SimpleTcpCluster"/>
      -->

      <Host name="localhost"  appBase="webapps"
            unpackWARs="false" autoDeploy="true">

        <Context path="/" docBase="../../web" debug="0" reloadable="${tomcat.ctx.reloadable}" disableURLRewriting="true" />

        <!-- SingleSignOn valve, share authentication between web applications
             Documentation at: /docs/config/valve.html -->
        <!--
        <Valve className="org.apache.catalina.authenticator.SingleSignOn" />
        -->

        <!-- Access log processes all example.
             Documentation at: /docs/config/valve.html
             Note: The pattern used is equivalent to using pattern="common" -->
        <Valve className="org.apache.catalina.valves.AccessLogValve" directory="${tomcat.access.logs.dir}"
               prefix="localhost_access_log." suffix=".txt"
               pattern="%h %l %u %t &quot;%r&quot; %s %b &quot;%{Referer}i&quot; &quot;%{User-Agent}i&quot; xff=&quot;%{X-Forwarded-For}i&quot; thread=%I proto=&quot;%H&quot; local_server_ip=&quot;%A&quot; server=&quot;%v&quot; time_taken=&quot;%D&quot;  %{_ADDITION_PROPS}r " 
               resolveHosts="false"/>

      </Host>    </Engine>
  </Service>
</Server>
